{"ast":null,"code":"var _jsxFileName = \"/Library/WebServer/Documents/react-apps/kingrobe-with-Stripe-backend/client/src/component/ErrorBoundary/ErrorBoundary.component.jsx\";\nimport React from 'react';\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return {\n      hasError: true\n    };\n  }\n\n  componentDidCatch(error, info) {\n    console.log(error);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 20\n        }\n      }, \"Something is wrong\");\n    }\n\n    return this.props.children;\n  }\n\n}\n\nexport default ErrorBoundary;","map":{"version":3,"sources":["/Library/WebServer/Documents/react-apps/kingrobe-with-Stripe-backend/client/src/component/ErrorBoundary/ErrorBoundary.component.jsx"],"names":["React","ErrorBoundary","Component","constructor","props","state","hasError","getDerivedStateFromError","error","componentDidCatch","info","console","log","render","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA2C;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGH;;AACD,SAAOC,wBAAP,CAAgCC,KAAhC,EAAsC;AAClC,WAAO;AAACF,MAAAA,QAAQ,EAAE;AAAX,KAAP;AACH;;AAEDG,EAAAA,iBAAiB,CAACD,KAAD,EAAQE,IAAR,EAAa;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACH;;AAEDK,EAAAA,MAAM,GAAE;AACJ,QAAG,KAAKR,KAAL,CAAWC,QAAd,EAAuB;AACnB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;AACH;;AACD,WAAO,KAAKF,KAAL,CAAWU,QAAlB;AACH;;AApBsC;;AAwB3C,eAAeb,aAAf","sourcesContent":["import React from 'react';\n\nclass ErrorBoundary extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n    static getDerivedStateFromError(error){\n        return {hasError: true}\n    }\n\n    componentDidCatch(error, info){\n        console.log(error);\n    }\n\n    render(){\n        if(this.state.hasError){\n            return <div>Something is wrong</div>\n        }\n        return this.props.children;\n    }\n\n}\n\nexport default ErrorBoundary;"]},"metadata":{},"sourceType":"module"}