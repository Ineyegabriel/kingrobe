{"ast":null,"code":"var _jsxFileName = \"/Library/WebServer/Documents/react-apps/kingrobe-with-Stripe-backend/client/src/component/SignIn/SignIn.js\";\nimport React, { useState } from 'react';\nimport FormInput from \"../FormInput/FormInput\";\nimport CustomButtons from \"../CustomButtons/CustomButtons\";\nimport Styles from './SignIn.module.scss';\nimport { connect } from 'react-redux';\nimport { googleSigninStart, emailSigninStart } from '../../redux/user/userActions';\n\nconst SignIn = ({\n  signinwithEmail,\n  signinwithGoogle\n}) => {\n  const [userCredentials, setuserCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const submitHandler = async event => {\n    event.preventDefault();\n    signinwithEmail(email, password);\n  };\n\n  const inputonChangedhandler = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    console.log(`${value}`);\n    setuserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: Styles.signIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    label: \"Email\",\n    value: email,\n    required: true,\n    handlechange: inputonChangedhandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    label: \"Password\",\n    value: password,\n    required: true,\n    handlechange: inputonChangedhandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: Styles.buttonContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CustomButtons, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, \"Sign In\"), /*#__PURE__*/React.createElement(CustomButtons, {\n    type: \"button\",\n    onClick: signinwithGoogle,\n    isGooglesignin: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, \"Sign In with Google\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signinwithGoogle: () => dispatch(googleSigninStart()),\n  signinwithEmail: (email, password) => dispatch(emailSigninStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Library/WebServer/Documents/react-apps/kingrobe-with-Stripe-backend/client/src/component/SignIn/SignIn.js"],"names":["React","useState","FormInput","CustomButtons","Styles","connect","googleSigninStart","emailSigninStart","SignIn","signinwithEmail","signinwithGoogle","userCredentials","setuserCredentials","email","password","submitHandler","event","preventDefault","inputonChangedhandler","name","value","target","console","log","signIn","buttonContainer","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,iBAAR,EAA2BC,gBAA3B,QAAkD,8BAAlD;;AACA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,eAAD;AAAiBC,EAAAA;AAAjB,CAAD,KAAwC;AACnD,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,CAAC;AAAEY,IAAAA,KAAK,EAAG,EAAV;AAAcC,IAAAA,QAAQ,EAAE;AAAxB,GAAD,CAAtD;AACA,QAAM;AAACD,IAAAA,KAAD;AAAOC,IAAAA;AAAP,MAAmBH,eAAzB;;AACA,QAAMI,aAAa,GAAG,MAAMC,KAAN,IAAc;AAChCA,IAAAA,KAAK,CAACC,cAAN;AACAR,IAAAA,eAAe,CAACI,KAAD,EAAQC,QAAR,CAAf;AACH,GAHD;;AAIA,QAAMI,qBAAqB,GAAGF,KAAK,IAAG;AAClC,UAAM;AAACG,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBJ,KAAK,CAACK,MAA5B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAa,GAAEH,KAAM,EAArB;AACAR,IAAAA,kBAAkB,CAAC,EAAC,GAAGD,eAAJ;AAAqB,OAACQ,IAAD,GAAQC;AAA7B,KAAD,CAAlB;AACH,GAJD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAEhB,MAAM,CAACoB,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFJ,eAGI;AAAM,IAAA,QAAQ,EAAET,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,OAAhB;AAAwB,IAAA,IAAI,EAAC,OAA7B;AAAqC,IAAA,KAAK,EAAC,OAA3C;AACW,IAAA,KAAK,EAAEF,KADlB;AACyB,IAAA,QAAQ,MADjC;AAEW,IAAA,YAAY,EAAEK,qBAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAII,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,UAAhB;AAA2B,IAAA,IAAI,EAAC,UAAhC;AAA2C,IAAA,KAAK,EAAC,UAAjD;AACW,IAAA,KAAK,EAAEJ,QADlB;AAC4B,IAAA,QAAQ,MADpC;AAEW,IAAA,YAAY,EAAEI,qBAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAOI;AAAK,IAAA,SAAS,EAAEd,MAAM,CAACqB,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAC,QAApB;AAA6B,IAAA,OAAO,EAAEf,gBAAtC;AAAwD,IAAA,cAAc,MAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFJ,CAPJ,CAHJ,CADJ;AAkBH,CA9BD;;AA+BA,MAAMgB,kBAAkB,GAAGC,QAAQ,KAAI;AACnCjB,EAAAA,gBAAgB,EAAE,MAAMiB,QAAQ,CAACrB,iBAAiB,EAAlB,CADG;AAEnCG,EAAAA,eAAe,EAAG,CAACI,KAAD,EAAQC,QAAR,KAAqBa,QAAQ,CAACpB,gBAAgB,CAAC;AAACM,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAD,CAAjB;AAFZ,CAAJ,CAAnC;;AAIA,eAAeT,OAAO,CAAC,IAAD,EAAMqB,kBAAN,CAAP,CAAiClB,MAAjC,CAAf","sourcesContent":["import React, {useState} from 'react';\nimport FormInput from \"../FormInput/FormInput\";\nimport CustomButtons from \"../CustomButtons/CustomButtons\";\nimport Styles from './SignIn.module.scss';\nimport {connect} from 'react-redux';\nimport {googleSigninStart, emailSigninStart} from '../../redux/user/userActions';\nconst SignIn = ({signinwithEmail,signinwithGoogle}) => {\n    const [userCredentials, setuserCredentials] = useState({ email : '', password: ''});\n    const {email,password} = userCredentials;\n    const submitHandler = async event =>{\n        event.preventDefault();\n        signinwithEmail(email, password);\n    };\n    const inputonChangedhandler = event =>{\n        const {name, value} = event.target;\n        console.log(`${value}`);\n        setuserCredentials({...userCredentials, [name]: value})\n    };\n    return (\n        <div className={Styles.signIn}>\n            <h2>I already have an account</h2>\n            <span>Sign in with your email and password</span>\n            <form onSubmit={submitHandler}>\n                <FormInput type=\"email\" name=\"email\" label='Email'\n                           value={email} required\n                           handlechange={inputonChangedhandler}/>\n                <FormInput type=\"password\" name=\"password\" label='Password'\n                           value={password} required\n                           handlechange={inputonChangedhandler}/>\n                <div className={Styles.buttonContainer}>\n                    <CustomButtons type=\"submit\">Sign In</CustomButtons>\n                    <CustomButtons type=\"button\" onClick={signinwithGoogle} isGooglesignin>Sign In with Google</CustomButtons>\n                </div>\n            </form>\n        </div>\n    );\n}\nconst mapDispatchToProps = dispatch =>({\n    signinwithGoogle: () => dispatch(googleSigninStart()),\n    signinwithEmail : (email, password) => dispatch(emailSigninStart({email, password}))\n});\nexport default connect(null,mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}