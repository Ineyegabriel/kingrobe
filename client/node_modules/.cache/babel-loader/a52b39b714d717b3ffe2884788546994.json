{"ast":null,"code":"import { CartActionTypes } from '../ActionTypes';\nimport { addItemToCart, reduceItemquantity } from './cart.Utils';\nconst initialState = {\n  cartdropdownHidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_DISPLAY:\n      return { ...state,\n        cartdropdownHidden: !state.cartdropdownHidden\n      };\n\n    case CartActionTypes.ADD_ITEM:\n      return { ...state,\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      };\n\n    case CartActionTypes.REDUCE_ITEM_QUANTITY:\n      return { ...state,\n        cartItems: reduceItemquantity(state.cartItems, action.payload)\n      };\n\n    case CartActionTypes.CLEAR_ITEM:\n      return { ...state,\n        cartItems: state.cartItems.filter(item => item.id !== action.payload.id)\n      };\n\n    case CartActionTypes.CLEAR_CART:\n      return { ...state,\n        cartItems: []\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Library/WebServer/Documents/react-apps/kingrobe-with-Stripe-backend/client/src/redux/cart/cartReducer.js"],"names":["CartActionTypes","addItemToCart","reduceItemquantity","initialState","cartdropdownHidden","cartItems","cartReducer","state","action","type","TOGGLE_CART_DISPLAY","ADD_ITEM","payload","REDUCE_ITEM_QUANTITY","CLEAR_ITEM","filter","item","id","CLEAR_CART"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,gBAA9B;AACA,SAAQC,aAAR,EAAsBC,kBAAtB,QAA+C,cAA/C;AACA,MAAMC,YAAY,GAAE;AAChBC,EAAAA,kBAAkB,EAAE,IADJ;AAEhBC,EAAAA,SAAS,EAAE;AAFK,CAApB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAiC;AACjD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,eAAe,CAACU,mBAArB;AACI,aAAO,EACH,GAAGH,KADA;AAEHH,QAAAA,kBAAkB,EAAE,CAACG,KAAK,CAACH;AAFxB,OAAP;;AAIJ,SAAKJ,eAAe,CAACW,QAArB;AACI,aAAO,EACH,GAAGJ,KADA;AAEHF,QAAAA,SAAS,EAAEJ,aAAa,CAACM,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAFrB,OAAP;;AAIJ,SAAKZ,eAAe,CAACa,oBAArB;AACI,aAAO,EACH,GAAGN,KADA;AAEHF,QAAAA,SAAS,EAAEH,kBAAkB,CAACK,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAF1B,OAAP;;AAIJ,SAAKZ,eAAe,CAACc,UAArB;AACI,aAAO,EACH,GAAGP,KADA;AAEHF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBU,MAAhB,CAAuBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYT,MAAM,CAACI,OAAP,CAAeK,EAA1D;AAFR,OAAP;;AAIJ,SAAKjB,eAAe,CAACkB,UAArB;AACI,aAAM,EACF,GAAGX,KADD;AAEFF,QAAAA,SAAS,EAAE;AAFT,OAAN;;AAIJ;AACI,aAAOE,KAAP;AA3BR;AA6BH,CA9BD;;AA+BA,eAAgBD,WAAhB","sourcesContent":["import {CartActionTypes} from '../ActionTypes';\nimport {addItemToCart,reduceItemquantity} from './cart.Utils';\nconst initialState ={\n    cartdropdownHidden: true,\n    cartItems: []\n};\nconst cartReducer = (state = initialState, action) =>{\n    switch (action.type){\n        case CartActionTypes.TOGGLE_CART_DISPLAY:\n            return {\n                ...state,\n                cartdropdownHidden: !state.cartdropdownHidden\n            };\n        case CartActionTypes.ADD_ITEM:\n            return {\n                ...state,\n                cartItems: addItemToCart(state.cartItems, action.payload)\n            };\n        case CartActionTypes.REDUCE_ITEM_QUANTITY:\n            return {\n                ...state,\n                cartItems: reduceItemquantity(state.cartItems, action.payload)\n            };\n        case CartActionTypes.CLEAR_ITEM:\n            return {\n                ...state,\n                cartItems: state.cartItems.filter(item => item.id !== action.payload.id)\n            };\n        case CartActionTypes.CLEAR_CART:\n            return{\n                ...state,\n                cartItems: [],\n            };\n        default:\n            return state;\n    }\n};\nexport default  cartReducer;"]},"metadata":{},"sourceType":"module"}