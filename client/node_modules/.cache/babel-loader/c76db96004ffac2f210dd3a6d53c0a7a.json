{"ast":null,"code":"var _jsxFileName = \"/Library/WebServer/Documents/react-apps/kingrobe-with-Stripe-backend/client/src/component/Signup/Signup.js\";\nimport React, { useState } from 'react';\nimport FormInput from \"../FormInput/FormInput\";\nimport CustomButtons from \"../CustomButtons/CustomButtons\";\nimport { connect } from 'react-redux';\nimport { SignupStart } from '../../redux/user/userActions';\nimport Styles from './Signup.module.scss';\n\nconst Signup = ({\n  Signinup\n}) => {\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    ConfirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    ConfirmPassword\n  } = userCredentials;\n\n  const inputChangeHandler = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  const formHandleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== ConfirmPassword) {\n      alert(\"Passwords did not match !\");\n      return;\n    }\n\n    Signinup({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: Styles.signup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: Styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"I do not have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"signupForm\",\n    onSubmit: formHandleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: inputChangeHandler,\n    label: \"Display Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: inputChangeHandler,\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: inputChangeHandler,\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"ConfirmPassword\",\n    value: ConfirmPassword,\n    onChange: inputChangeHandler,\n    label: \"Confirm Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CustomButtons, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, \"Sign Up\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  Signinup: usercredentials => dispatch(SignupStart(usercredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(Signup);","map":{"version":3,"sources":["/Library/WebServer/Documents/react-apps/kingrobe-with-Stripe-backend/client/src/component/Signup/Signup.js"],"names":["React","useState","FormInput","CustomButtons","connect","SignupStart","Styles","Signup","Signinup","userCredentials","setUserCredentials","displayName","email","password","ConfirmPassword","inputChangeHandler","event","name","value","target","formHandleSubmit","preventDefault","alert","signup","title","mapDispatchToProps","dispatch","usercredentials"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport FormInput from \"../FormInput/FormInput\";\nimport CustomButtons from \"../CustomButtons/CustomButtons\";\nimport {connect} from 'react-redux';\nimport {SignupStart} from '../../redux/user/userActions';\nimport Styles from './Signup.module.scss';\nconst Signup = ({Signinup}) => {\n\n    const [userCredentials, setUserCredentials] = useState({\n        displayName:'',\n        email:'',\n        password:'',\n        ConfirmPassword:''\n    });\n    const {displayName,email,password,ConfirmPassword} = userCredentials;\n\n    const inputChangeHandler = event =>{\n        const {name,value} = event.target;\n        setUserCredentials({...userCredentials, [name]: value});\n    };\n    const formHandleSubmit = async event=>{\n        event.preventDefault();\n        if( password !== ConfirmPassword) {\n            alert(\"Passwords did not match !\");\n            return\n        }\n        Signinup({displayName,email,password});\n    };\n\n\n    return (\n        <div className={Styles.signup}>\n            <h2 className={Styles.title}>I do not have an account</h2>\n            <span>Sign up with your email and password</span>\n            <form className=\"signupForm\" onSubmit={formHandleSubmit} >\n                <FormInput type=\"text\" name=\"displayName\" value={displayName}\n                           onChange={inputChangeHandler} label=\"Display Name\" required/>\n                <FormInput type=\"email\" name=\"email\" value={email}\n                           onChange={inputChangeHandler} label=\"Email\" required/>\n                <FormInput type=\"password\" name=\"password\" value={password}\n                           onChange={inputChangeHandler} label=\"Password\" required/>\n                <FormInput type=\"password\" name=\"ConfirmPassword\" value={ConfirmPassword}\n                           onChange={inputChangeHandler} label=\"Confirm Password\" required/>\n                <CustomButtons type=\"submit\">Sign Up</CustomButtons>\n            </form>\n        </div>\n    );\n}\n\nconst mapDispatchToProps = dispatch =>({\n    Signinup: (usercredentials) => dispatch(SignupStart(usercredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(Signup);"]},"metadata":{},"sourceType":"module"}