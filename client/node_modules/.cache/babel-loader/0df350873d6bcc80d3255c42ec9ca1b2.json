{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector([selectShop], shop => shop.collections);\nexport const selectCollectionPreview = createSelector([selectCollections], collections => collections ? Object.keys(collections).map(items => collections[items]) : []);\nexport const selectedCollectionItem = urlparam => {\n  return createSelector([selectCollections], collections => collections ? collections[urlparam] : null);\n};\nexport const selectIsCollectionFetching = createSelector([selectShop], shop => shop.isFetching);\nexport const selectCollectionLoaded = createSelector([selectShop], shop => !!shop.collections);","map":{"version":3,"sources":["/Library/WebServer/Documents/react-apps/kingrobe-with-Stripe-backend/client/src/redux/shop/shopSelector.js"],"names":["createSelector","selectShop","state","shop","selectCollections","collections","selectCollectionPreview","Object","keys","map","items","selectedCollectionItem","urlparam","selectIsCollectionFetching","isFetching","selectCollectionLoaded"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,UAA7B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,iBAAiB,GAAGJ,cAAc,CAC3C,CAACC,UAAD,CAD2C,EAE3CE,IAAI,IAAIA,IAAI,CAACE,WAF8B,CAAxC;AAIP,OAAO,MAAMC,uBAAuB,GAAGN,cAAc,CACjD,CAACI,iBAAD,CADiD,EAEjDC,WAAW,IAAIA,WAAW,GAAGE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA6BC,KAAK,IAAIL,WAAW,CAACK,KAAD,CAAjD,CAAH,GAA+D,EAFxC,CAA9C;AAIP,OAAO,MAAMC,sBAAsB,GAAGC,QAAQ,IAAG;AAC7C,SACIZ,cAAc,CACV,CAACI,iBAAD,CADU,EAEVC,WAAW,IAAIA,WAAW,GAAGA,WAAW,CAACO,QAAD,CAAd,GAA2B,IAF3C,CADlB;AAMH,CAPM;AASP,OAAO,MAAMC,0BAA0B,GAAGb,cAAc,CACpD,CAACC,UAAD,CADoD,EAEpDE,IAAI,IAAIA,IAAI,CAACW,UAFuC,CAAjD;AAKP,OAAO,MAAMC,sBAAsB,GAAGf,cAAc,CAChD,CAACC,UAAD,CADgD,EAEhDE,IAAI,IAAI,CAAC,CAACA,IAAI,CAACE,WAFiC,CAA7C","sourcesContent":["import {createSelector} from 'reselect';\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector(\n    [selectShop],\n    shop => shop.collections\n);\nexport const selectCollectionPreview = createSelector(\n    [selectCollections],\n    collections => collections ? Object.keys(collections).map(items => collections[items]) : []\n);\nexport const selectedCollectionItem = urlparam =>{\n    return (\n        createSelector(\n            [selectCollections],\n            collections => collections ? collections[urlparam] : null\n        )\n    )\n};\n\nexport const selectIsCollectionFetching = createSelector(\n    [selectShop],\n    shop => shop.isFetching\n);\n\nexport const selectCollectionLoaded = createSelector(\n    [selectShop],\n    shop => !!shop.collections\n);"]},"metadata":{},"sourceType":"module"}