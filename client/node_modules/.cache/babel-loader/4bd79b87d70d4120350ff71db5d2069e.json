{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport logger from 'redux-logger';\nimport rootReducer from './root-reducer';\nimport { persistStore } from 'redux-persist';\nimport createSageMiddleware from 'redux-saga';\nimport rootSaga from './root-saga';\nconst sagaMiddleware = createSageMiddleware();\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(...middlewares)));\nsagaMiddleware.run(rootSaga);\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["/Library/WebServer/Documents/react-apps/kingrobe-with-Stripe-backend/client/src/redux/store.js"],"names":["createStore","applyMiddleware","compose","logger","rootReducer","persistStore","createSageMiddleware","rootSaga","sagaMiddleware","middlewares","process","env","NODE_ENV","push","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","run","persistor"],"mappings":"AAAA,SAAQA,WAAR,EAAoBC,eAApB,EAAoCC,OAApC,QAAkD,OAAlD;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAAQC,YAAR,QAA2B,eAA3B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,MAAMC,cAAc,GAAGF,oBAAoB,EAA3C;AAEA,MAAMG,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,IAAGE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA5B,EAA0C;AACtCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBV,MAAjB;AACH;;AACD,MAAMW,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+Cd,OAAxE;AAEA,OAAO,MAAMe,KAAK,GAAGjB,WAAW,CAACI,WAAD,EAAcU,gBAAgB,CAAEb,eAAe,CAAC,GAAGQ,WAAJ,CAAjB,CAA9B,CAAzB;AAEPD,cAAc,CAACU,GAAf,CAAmBX,QAAnB;AAEA,OAAO,MAAMY,SAAS,GAAGd,YAAY,CAACY,KAAD,CAA9B;AAEP,eAAe;AAACA,EAAAA,KAAD;AAAQE,EAAAA;AAAR,CAAf","sourcesContent":["import {createStore,applyMiddleware,compose} from 'redux';\nimport logger from 'redux-logger';\nimport rootReducer from './root-reducer';\nimport {persistStore} from 'redux-persist';\nimport createSageMiddleware from 'redux-saga';\nimport rootSaga from './root-saga';\n\nconst sagaMiddleware = createSageMiddleware();\n\nconst middlewares = [sagaMiddleware];\n\nif(process.env.NODE_ENV === 'development'){\n    middlewares.push(logger)\n}\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(rootReducer, composeEnhancers( applyMiddleware(...middlewares)));\n\nsagaMiddleware.run(rootSaga);\n\nexport const persistor = persistStore(store);\n\nexport default {store, persistor};"]},"metadata":{},"sourceType":"module"}