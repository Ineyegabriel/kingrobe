{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { UserActionTypes } from '../ActionTypes';\nimport { auth, GoogleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { SigninFailure, SigninSuccess, SignOutSuccess, SignOutFailure, SignupSuccess, SignupFailure } from './userActions';\nexport function* getUserSnapShot(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapShot = yield userRef.get();\n    yield put(SigninSuccess({\n      id: userSnapShot.id,\n      ...userSnapShot.data()\n    }));\n  } catch (error) {\n    yield put(SigninFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getUserSnapShot(userAuth);\n  } catch (error) {\n    yield put(SigninFailure(error));\n  }\n}\nexport function* onCheckuserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* SigninwithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(GoogleProvider);\n    yield getUserSnapShot(user);\n  } catch (error) {\n    yield put(SigninFailure(error));\n  }\n}\nexport function* onGoogleSigninStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGNIN_START, SigninwithGoogle);\n}\nexport function* SigninwithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getUserSnapShot(user);\n  } catch (error) {\n    yield put(SigninFailure(error));\n  }\n}\nexport function* onEMailSigninStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGNIN_START, SigninwithEmail);\n}\nexport function* SigningOut() {\n  try {\n    yield auth.signOut();\n    yield put(SignOutSuccess());\n  } catch (error) {\n    yield put(SignOutFailure(error));\n  }\n}\nexport function* onSignout() {\n  yield takeLatest(UserActionTypes.SIGNOUT_START, SigningOut);\n}\nexport function* SigningUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(SignupSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(SignupFailure(error));\n  }\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGNUP_START, SigningUp);\n}\n;\nexport function* signinAfterSignup({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getUserSnapShot(user, additionalData);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGNUP_SUCCESS, signinAfterSignup);\n}\nexport function* userSaga() {\n  yield all([call(onGoogleSigninStart), call(onEMailSigninStart), call(onCheckuserSession), call(onSignout), call(onSignUpStart), call(onSignUpSuccess)]);\n}","map":{"version":3,"sources":["/Library/WebServer/Documents/react-apps/kingrobe-with-Stripe-backend/client/src/redux/user/userSaga.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","GoogleProvider","createUserProfileDocument","getCurrentUser","SigninFailure","SigninSuccess","SignOutSuccess","SignOutFailure","SignupSuccess","SignupFailure","getUserSnapShot","userAuth","additionalData","userRef","userSnapShot","get","id","data","error","isUserAuthenticated","onCheckuserSession","CHECK_USER_SESSION","SigninwithGoogle","user","signInWithPopup","onGoogleSigninStart","GOOGLE_SIGNIN_START","SigninwithEmail","payload","email","password","signInWithEmailAndPassword","onEMailSigninStart","EMAIL_SIGNIN_START","SigningOut","signOut","onSignout","SIGNOUT_START","SigningUp","displayName","createUserWithEmailAndPassword","onSignUpStart","SIGNUP_START","signinAfterSignup","onSignUpSuccess","SIGNUP_SUCCESS","userSaga"],"mappings":"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","sourcesContent":["import {takeLatest,put,all,call} from 'redux-saga/effects';\nimport {UserActionTypes} from '../ActionTypes';\nimport {auth,GoogleProvider,createUserProfileDocument, getCurrentUser} from '../../firebase/firebase.utils';\nimport {SigninFailure,SigninSuccess, SignOutSuccess, SignOutFailure,SignupSuccess,SignupFailure} from './userActions';\n\nexport function* getUserSnapShot(userAuth, additionalData) {\n    try{\n        const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n        const userSnapShot = yield userRef.get();\n        yield put(\n            SigninSuccess({\n                id: userSnapShot.id,\n                ...userSnapShot.data()\n            })\n        );\n    }\n    catch(error){\n        yield put(SigninFailure(error));\n    }\n}\n\nexport function* isUserAuthenticated() {\n    try{\n        const userAuth = yield getCurrentUser();\n        if(!userAuth) return;\n        yield getUserSnapShot(userAuth);\n\n    }\n    catch (error){\n        yield put(SigninFailure(error));\n    }\n}\n\nexport function* onCheckuserSession() {\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION,isUserAuthenticated)\n}\n\nexport function* SigninwithGoogle(){\n    try{\n        const {user} = yield auth.signInWithPopup(GoogleProvider);\n        yield getUserSnapShot(user);\n    }catch (error){\n        yield put(SigninFailure(error))\n    }\n}\n\nexport function* onGoogleSigninStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGNIN_START, SigninwithGoogle)\n}\n\nexport function* SigninwithEmail({payload: { email, password }}) {\n    try{\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\n        yield getUserSnapShot(user);\n    }catch(error){\n        yield put(SigninFailure(error))\n    }\n}\n\nexport function* onEMailSigninStart() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGNIN_START, SigninwithEmail)\n}\n\nexport function* SigningOut () {\n   try{\n       yield auth.signOut();\n       yield put(SignOutSuccess());\n   }catch(error){\n        yield put(SignOutFailure(error));\n   }\n}\n\nexport function* onSignout(){\n    yield takeLatest(UserActionTypes.SIGNOUT_START, SigningOut)\n}\n\nexport function* SigningUp({payload: {email, password, displayName}}){\n    try{\n        const {user} = yield auth.createUserWithEmailAndPassword(email,password);\n        yield put(SignupSuccess({ user, additionalData: {displayName} }) )\n    }\n    catch(error) {\n        yield put(SignupFailure(error))\n    }\n}\n\nexport function* onSignUpStart(){\n    yield takeLatest(UserActionTypes.SIGNUP_START, SigningUp)\n};\nexport function* signinAfterSignup({payload: {user, additionalData}}){\n    yield getUserSnapShot(user, additionalData)\n}\nexport function* onSignUpSuccess() {\n    yield takeLatest(UserActionTypes.SIGNUP_SUCCESS, signinAfterSignup)\n}\nexport function* userSaga() {\n    yield all([\n        call(onGoogleSigninStart),\n        call(onEMailSigninStart),\n        call(onCheckuserSession),\n        call(onSignout),\n        call(onSignUpStart),\n        call(onSignUpSuccess)\n    ]);\n}"]},"metadata":{},"sourceType":"module"}